---

- name: VMs | Create Directory
  file:
    path: "{{ path_images_iso }}"
    state: directory
    owner: "{{ asir_user }}"
    group: "{{ asir_user }}"
    mode: 0755

- name: VMs | Check if ISOs exists
  stat:
    path: "{{ item.path }}"
  register: iso_exists
  failed_when: not iso_exists.stat.exists
  with_items:
    - "{{ images_iso }}"
  ignore_errors: true

- name: VMs | Download Images ISOs
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.path }}"
  with_items:
    - "{{ images_iso }}"
  when: not iso_exists is defined or iso_exists is failed

- name: VMs | Copy custom images
  template:
    src: "templates/{{ item }}"
    dest: "{{ path_images_iso }}/{{ item }}"
  with_items: "{{ custom_images }}"
  when: custom_images is defined
##
- name: VMs | Create VirtualBox VM
  vboxmanage_guest:
    state: stopped
    name: "{{ vm_name_ubuntu }}"
    ostype: "{{ vm_type_os }}"
##
- name: "VMs | Check if {{ vm_name_ubuntu }} already exists"
  command: "VBoxManage showvminfo {{ vm_name_ubuntu }}"
  register: vm_ubuntu_exists
  ignore_errors: True

- name: "VMs | Create {{ vm_name_ubuntu }}"
  command: "VBoxManage createvm --name {{ vm_name_ubuntu }} --ostype {{ vm_type_os }} --register"
  register: vm_ubuntu_create
  when: vm_ubuntu_exists.rc != 0

- name: "VMs | Modify {{ vm_name_ubuntu }}"
  command: "VBoxManage modifyvm {{ vm_name_ubuntu }} --memory {{ memory_ram_ubuntu }} --nic1 bridged --bridgeadapter1 {{ default_bridgeadapter }} --cpus {{ n_cpus_ubuntu }}"
  when: vm_ubuntu_create.rc = 0

- name: "VMs | Create medium for {{ vm_name_ubuntu }}"
  command: "VBoxManage createmedium disk --filename {{ vm_name_ubuntu }} --size {{ disk_size_ubuntu }} --format {{ default_hdd_format }} --variant Standard"
  when: vm_ubuntu_create.rc = 0



##

- name: "VMs | Check if {{ vm_name_linuxmint }} already exists"
  command: "VBoxManage showvminfo {{ vm_name_linuxmint }}"
  register: vm_linuxmint_exists
  ignore_errors: True

- name: "VMs | Create {{ vm_name_linuxmint }}"
  command: "VBoxManage createvm --name {{ vm_name_linuxmint }} --ostype {{ vm_type_os }} --register"
  register: vm_linuxmint_create
  when: vm_linuxmint_exists.rc != 0

- name: "VMs | Modify {{ vm_name_ubuntu }}"
  command: "VBoxManage modifyvm {{ vm_name_ubuntu }} --memory {{ memory_ram_ubuntu }} --nic1 bridged --bridgeadapter1 {{ default_bridgeadapter }} --cpus {{ n_cpus_ubuntu }}"
  when: vm_linuxmint_create.rc != 0